{"version":3,"sources":["Components/About/About.module.css","Components/Repos/Repos.jsx","Components/About/About.jsx","Components/Item/ItemTypes.js","Components/Item/Item.jsx","Components/ItemList/ItemList.jsx","Components/Input/Input.jsx","Components/CalcTodo/CalcTodo.jsx","Components/Todo/Todo.jsx","Components/App/App.jsx","index.js","Components/CalcTodo/CalcTodo.module.css","Components/Item/Item.module.css","Components/App/App.module.css","Components/Repos/Repos.module.css","Components/Input/Input.module.css","Components/Todo/Todo.module.css","Components/ItemList/ItemList.module.css","Components/About/img/mail.svg","Components/About/img/telegram.svg","Components/About/img/github.svg","Components/About/img/vk.svg","Components/About/img/facebook.svg","Components/Input/assets/button.svg"],"names":["module","exports","octokit","Octokit","Repos","state","isLoading","isError","errorText","repoList","firstRepo","lastRepo","onClickNext","setState","onClickBack","repos","listForUser","username","then","data","catch","this","Card","className","styles","wrap","CircularProgress","preloader","wrap__repos","wrap__title","error","error__text","repositories","length","repository__list","map","repo","key","id","repository","href","svn_url","rel","target","name","language","toLowerCase","stargazers_count","forks","Date","updated_at","toLocaleString","day","month","year","repo__button","slice","buttons_wrap","button","onClick","disabled","React","Component","About","User","users","getByUsername","section","content__user","content__user_wrap","info","info__avatar","src","avatar_url","alt","desc","desc__login","desc__bio","bio","desc__mail","mail","desk__mail_img","desc__tg","telegram","desk__tg_img","contacts","github","contacts__link","vk","facebook","Item","forwardRef","ref","isDragging","connectDropTarget","connectDragSource","value","isOver","canDrop","isDone","isImportant","onClickDone","classes","onClickDelete","onClickImportant","elementRef","useRef","opacity","useImperativeHandle","getNode","current","style","classnames","wrapper","wrapper__text","Checkbox","color","checked","tabIndex","item","done","wrapper__icon","importantIcon","deleteIcon","DropTarget","ItemTypes","hover","props","monitor","component","node","dragIndex","getItem","index","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","moveCard","connect","dropTarget","DragSource","beginDrag","dragSource","ItemList","filtered","ItemListWrapEmpty","List","ItemListWrap","task","i","Input","inputValue","inputError","onLabelChange","e","onSubmit","preventDefault","onClickAdd","classNameForInputRepeat","onChange","placeholder","input","inputButton","buttonImg","CalcTodo","tasks","onClickFilteredTasks","allTasks","completedTasks","filter","uncompletedTasks","calcTasksWrapper","selected","tasksCount","buttonTasksName","Todo","maxId","JSON","parse","localStorage","count","dragCard","update","$splice","newItemList","newItem","filteredTasks","dealListString","stringify","setItem","container","DndProvider","backend","Backend","todoHeader","todoHeaderTitle","filteredValue","items","App","body","header","to","exact","header__link","activeClassName","header__todos","content","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66f2deba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"About_section__JfYl_\",\"content__user\":\"About_content__user__1-yFs\",\"content__user_error\":\"About_content__user_error__3fcdM\",\"info\":\"About_info__3f1VT\",\"info__avatar\":\"About_info__avatar__2kRF-\",\"desc\":\"About_desc__1cApd\",\"desc__login\":\"About_desc__login__3wTB5\",\"desc__bio\":\"About_desc__bio__yccwg\",\"desc__mail\":\"About_desc__mail__BJUlt\",\"desk__mail_img\":\"About_desk__mail_img__5vnm8\",\"desc__tg\":\"About_desc__tg__1qwt5\",\"desk__tg_img\":\"About_desk__tg_img__WYVNa\",\"contacts\":\"About_contacts__2upzg\",\"contacts__link\":\"About_contacts__link__3Prbw\",\"content\":\"About_content__1F1V-\"};","import React from 'react';\r\nimport styles from './Repos.module.css';\r\nimport Card from '@material-ui/core/Card';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Octokit from '@octokit/rest';\r\n\r\nconst  octokit = new  Octokit();\r\n\r\nclass Repos extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    isError: false,\r\n    errorText: '',\r\n    repoList: [],\r\n    firstRepo: 0,\r\n    lastRepo: 5\r\n  };\r\n\r\n  componentDidMount() {\r\n    octokit.repos.listForUser({\r\n      username: 'SveSvet',\r\n    }).then (({ data }) => {\r\n      this.setState({\r\n        repoList: data,\r\n        isLoading: false,\r\n      });\r\n    }).catch(() => {\r\n      this.setState({\r\n        isLoading: false,\r\n        isError: true,\r\n        errorText: 'User is not found',\r\n      });\r\n    });\r\n\r\n  };\r\n\r\n\r\n  onClickNext = () => {\r\n    this.setState({\r\n      firstRepo: this.state.firstRepo + 4,\r\n      lastRepo: this.state.lastRepo + 4\r\n    });\r\n  };\r\n\r\n  onClickBack = () => {\r\n    this.setState({\r\n      firstRepo: this.state.firstRepo - 4,\r\n      lastRepo: this.state.lastRepo - 4\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, isError, errorText, repoList,\r\n      onClickBack, onClickNext, firstRepo, lastRepo } = this.state;\r\n    return (\r\n\r\n        <Card className={ styles.wrap }>\r\n            { isLoading ? <CircularProgress className={styles.preloader}/> :\r\n                <div className={styles.wrap__repos}>\r\n                  <h1 className={styles.wrap__title}>Репозитории на github.com</h1>\r\n                  {isError ?\r\n                      <div className={styles.error}>\r\n                        <p className={styles.error__text}>{errorText}</p>\r\n                      </div> :\r\n                      <div className={styles.repositories}>\r\n\r\n\r\n                        {repoList.length < 4 ? /*условие, ЕСЛИ в списке репозиториев их меньше 4, то:*/\r\n                        <div className={styles.repository__list}>\r\n                              {\r\n                                repoList.map(repo => (\r\n                                    <ul key={repo.id}>\r\n                                      <div className={styles.repository}>\r\n                                        <div className={styles['about-repository-wrapper']}>\r\n                                          <a\r\n                                              className={styles['about-repository-link']}\r\n                                              href={repo.svn_url}\r\n                                              rel='noopener noreferrer'\r\n                                              target='_blank'\r\n                                          >\r\n                                            {repo.name}\r\n                                          </a>\r\n                                          <div className={styles['info-about-repo']}>\r\n\r\n                                            <div className={styles['info_about-repo__language-icon']}>\r\n                                              <div className={styles[`info-about-repo__${repo.language}-icon`.toLowerCase()]}></div>\r\n                                              <p className={styles['info-about-repo__language']}>{repo.language}</p>\r\n                                            </div>\r\n                                            <p className={styles['info-about-repo__star']}>{repo.stargazers_count}</p>\r\n                                            <p className={styles['info-about-repo__forks']}>{repo.forks}</p>\r\n                                            <span>Обновлен: {new Date(repo.updated_at).toLocaleString('en-US', {\r\n                                              day: 'numeric',\r\n                                              month: 'short',\r\n                                              year: 'numeric',\r\n                                            })}</span>\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                    </ul>\r\n                                ))\r\n                              } </div> : /*условие, ЕСЛИ в списке репозиториев больше, то: */\r\n                            <div className={styles.repo__button}>\r\n                            <div className={styles.repository__list}>\r\n                              {\r\n                                repoList.slice(firstRepo, lastRepo).map(repo => (\r\n                                    <ul key={repo.id}>\r\n                                      <div className={styles.repository}>\r\n                                        <div className={styles['about-repository-wrapper']}>\r\n                                          <a\r\n                                              className={styles['about-repository-link']}\r\n                                              href={repo.svn_url}\r\n                                              rel='noopener noreferrer'\r\n                                              target='_blank'\r\n                                          >\r\n                                            {repo.name}\r\n                                          </a>\r\n                                          <div className={styles['info-about-repo']}>\r\n\r\n                                            <div className={styles['info_about-repo__language-icon']}>\r\n                                              <div className={styles[`info-about-repo__${repo.language}-icon`.toLowerCase()]}></div>\r\n                                              <p className={styles['info-about-repo__language']}>{repo.language}</p>\r\n                                            </div>\r\n                                            <p className={styles['info-about-repo__star']}>{repo.stargazers_count}</p>\r\n                                            <p className={styles['info-about-repo__forks']}>{repo.forks}</p>\r\n                                            <span className={styles['info-about-repo__update']}>Обновлен: {new Date(repo.updated_at).toLocaleString('en-US', {\r\n                                              day: 'numeric',\r\n                                              month: 'short',\r\n                                              year: 'numeric',\r\n                                            })}</span>\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                    </ul>\r\n                                ))\r\n                              }\r\n                            </div>\r\n                              <div className={styles.buttons_wrap}>\r\n                                <button\r\n                                    className={styles.button}\r\n                                    onClick={()=>this.onClickBack()}\r\n                                    disabled={firstRepo < 3}\r\n                                >\r\n                                  Назад\r\n                                </button>\r\n                                <button\r\n                                    className={styles.button}\r\n                                    onClick={()=>this.onClickNext()}\r\n                                    disabled={repoList.length - lastRepo <= 0}\r\n                                >\r\n                                  Далее\r\n                                </button>\r\n                              </div>\r\n                              {/*ниже - див, закрывающий стиль 'repoWithButton'*/}\r\n                            </div>\r\n\r\n\r\n                          }\r\n\r\n                      </div>\r\n                  }\r\n                </div>\r\n            }\r\n        </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Repos;","import React from 'react';\r\nimport styles from './About.module.css';\r\nimport Repos from '../Repos/Repos';\r\nimport Card from '@material-ui/core/Card';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Octokit from '@octokit/rest';\r\n\r\nimport mail from './img/mail.svg';\r\nimport telegram from './img/telegram.svg';\r\nimport github from './img/github.svg';\r\nimport vk from './img/vk.svg';\r\nimport facebook from './img/facebook.svg';\r\n\r\nconst  octokit = new  Octokit();\r\n\r\nclass About extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    isError: false,\r\n    errorText: '',\r\n    User: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    octokit.users.getByUsername({\r\n      username: 'SveSvet',\r\n    }).then (({ data }) => {\r\n      this.setState({\r\n        User: data,\r\n        isLoading: false,\r\n      });\r\n    }).catch(() => {\r\n      this.setState({\r\n        isLoading: false,\r\n        isError: true,\r\n        errorText: 'User is not found :(',\r\n      });\r\n    });\r\n  };\r\n\r\n    render()\r\n    {\r\n      const { isLoading, isError, errorText, User } = this.state;\r\n      return (\r\n          <section className={styles.section}>\r\n\r\n              <Card className={styles.content__user}>\r\n                  {isLoading ? <CircularProgress /> :\r\n                      <div className={styles.content__user_wrap}>\r\n                        { isError ? <div className={styles['content__user_error']}>{errorText}</div> :\r\n                            <div className={styles.info}>\r\n                              <img className={styles.info__avatar} src={User.avatar_url} alt='avatar'></img>\r\n                              <div className={styles.desc}>\r\n                                <p className={styles.desc__login}>Светлана Митюхина</p>\r\n                                <p className={styles.desc__bio}>{User.bio}</p>\r\n                                <a className={ styles.desc__mail}\r\n                                  href='mailto: svetlana.mit.dev@gmail.com'>\r\n                                  <img src={ mail } alt='mail' className={ styles.desk__mail_img }></img>\r\n                                  svetlana.mit.dev@gmail.com\r\n                                </a>\r\n                                <a className={ styles.desc__tg } href='tg://resolve?domain=nasariolet'>\r\n                                  <img src={ telegram } alt='telegram' className={ styles.desk__tg_img }></img>\r\n                                  +7 999 828 27 15\r\n                                </a>\r\n                                <div className={styles.contacts}>\r\n                                  <a href='https://github.com/SveSvet'\r\n                                     target='_blank'\r\n                                     rel='noopener noreferrer'>\r\n                                    <img src={ github } alt='github' className={styles.contacts__link}></img>\r\n                                  </a>\r\n                                  <a href='https://vk.com/id70672243'\r\n                                     target='_blank'\r\n                                     rel='noopener noreferrer'>\r\n                                    <img src={ vk } alt='vk' className={styles.contacts__link}></img>\r\n                                  </a>\r\n                                  <a href='https://www.facebook.com/sveta.mityukhina'\r\n                                     target='_blank'\r\n                                     rel='noopener noreferrer'>\r\n                                    <img src={ facebook } alt='facebook' className={styles.contacts__link}></img>\r\n                                  </a>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                        }\r\n                      </div>\r\n                  }\r\n              </Card>\r\n                    <Repos />\r\n          </section>\r\n      );\r\n    }\r\n}\r\n\r\nexport default About;","export default {\r\n    CARD: 'card',\r\n}","import React, { useImperativeHandle, useRef } from 'react';\r\nimport classnames from 'classnames';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport styles from './Item.module.css';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport StarRoundedIcon from '@material-ui/icons/StarRounded';\r\nimport { DragSource, DropTarget } from 'react-dnd';\r\nimport ItemTypes from './ItemTypes';\r\n\r\nconst Item =\r\n    React.forwardRef( (\r\n            {isDragging, connectDropTarget, connectDragSource, isOver, canDrop,\r\n            value,\r\n            isDone,\r\n            isImportant,\r\n            classes,\r\n            onClickDone,\r\n            onClickDelete,\r\n            onClickImportant,\r\n            id }, ref ) => {\r\n                const elementRef = useRef(null);\r\n                connectDragSource(elementRef);\r\n                connectDropTarget(elementRef);\r\n                const opacity = isDragging ? 0 : 1;\r\n                useImperativeHandle(ref, () => ({\r\n                getNode: () => elementRef.current,\r\n            }));\r\n    return (\r\n    <div ref={elementRef}\r\n         style={{ opacity } }\r\n         className={ classnames({[styles.wrapper]: true, [styles.isImportant]: isImportant }) }>\r\n        <div className={styles.wrapper__text}>\r\n            <Checkbox color=\"primary\" checked={ isDone } tabIndex={ -1 } onClick={() => onClickDone(id)}/>\r\n            <span className={ classnames({[styles.item]: true, [styles.done]: isDone }) }> {value} </span>\r\n        </div>\r\n\r\n        <div className={styles.wrapper__icon}>\r\n            <StarRoundedIcon onClick={() => onClickImportant(id) } className={ classnames({[styles.importantIcon]: true, [styles.isImportant]: isImportant }) }/>\r\n            <DeleteIcon onClick={ () => onClickDelete(id)} className={styles.deleteIcon} />\r\n        </div>\r\n    </div>\r\n)});\r\n\r\nexport default DropTarget(\r\n    ItemTypes.CARD,\r\n    {\r\n        hover(props, monitor, component) {\r\n            if (!component) {\r\n                return null\r\n            }\r\n            const node = component.getNode();\r\n            if (!node) {\r\n                return null\r\n            }\r\n            const dragIndex = monitor.getItem().index;\r\n            const hoverIndex = props.index;\r\n            if (dragIndex === hoverIndex) {\r\n                return\r\n            }\r\n            const hoverBoundingRect = node.getBoundingClientRect();\r\n            const hoverMiddleY =\r\n                (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n            const clientOffset = monitor.getClientOffset();\r\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                return\r\n            }\r\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                return\r\n            }\r\n            props.moveCard(dragIndex, hoverIndex);\r\n            monitor.getItem().index = hoverIndex\r\n        },\r\n    },\r\n    (connect) => ({\r\n        connectDropTarget: connect.dropTarget(),\r\n    }),\r\n)(\r\n    DragSource(\r\n        ItemTypes.CARD,\r\n        {\r\n            beginDrag: (props) => ({\r\n                id: props.id,\r\n                index: props.index,\r\n            }),\r\n        },\r\n        (connect, monitor) => ({\r\n            connectDragSource: connect.dragSource(),\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    )(Item),\r\n);\r\n\r\n","import React from \"react\";\r\nimport List from '@material-ui/core/List';\r\nimport styles from './ItemList.module.css';\r\nimport Item from '../Item/Item';\r\n\r\n\r\nconst ItemList = ({ filtered, onClickDone, onClickDelete, onClickImportant, moveCard }) => {\r\n    if (filtered.length === 0) {\r\n        return(\r\n            <div className={styles.ItemListWrapEmpty} />\r\n        )} else {\r\n            return(\r\n                <List className={styles.ItemListWrap}>\r\n                    {filtered.map((task, i) =>\r\n                      <li key={task.id} >\r\n                        <Item\r\n                            value={task.value}\r\n                            isDone={task.isDone}\r\n                            isImportant={task.isImportant}\r\n                            id={task.id}\r\n                            index={i}\r\n                            onClickDone={onClickDone}\r\n                            onClickDelete={onClickDelete}\r\n                            onClickImportant={onClickImportant}\r\n                            moveCard={moveCard}\r\n                        />\r\n                    </li>)}\r\n                </List>\r\n            )}\r\n    };\r\n\r\nexport default ItemList;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport styles from './Input.module.css';\r\nimport buttonImg from './assets/button.svg';\r\n\r\nclass Input extends React.Component {\r\n        state = {\r\n                inputValue: '',\r\n                inputError: false,\r\n            };\r\n\r\n            onLabelChange = (e) => {\r\n            this.setState({\r\n                 inputValue: e.target.value\r\n            })\r\n        };\r\n\r\n        onSubmit = (e) => {\r\n        e.preventDefault();\r\n            if (this.state.inputValue === '') {\r\n                this.setState({\r\n                    inputError: true,\r\n                });\r\n        \r\n            } else {\r\n                this.setState({\r\n                inputValue: '',\r\n                inputError: false,\r\n            });\r\n            this.props.onClickAdd(this.state.inputValue);\r\n            }\r\n        };\r\n        \r\n        render() {\r\n                const { inputValue, inputError } = this.state;\r\n                const { classNameForInputRepeat } = this.props;\r\n\r\n            return (\r\n                <form className={classnames({\r\n                        [styles['inputWrap']]: true,\r\n                        [styles['inputError']]: inputError,\r\n                        [styles['inputRepeat']]: classNameForInputRepeat})}\r\n                        onSubmit={this.onSubmit}\r\n                        >\r\n                        <input\r\n                            onChange={this.onLabelChange}\r\n                            placeholder={'Введите текст'}\r\n                            className={styles.input}\r\n                            value={inputValue}\r\n                             />\r\n                    <button className={styles.inputButton}>\r\n                        <img src={buttonImg} alt=\"\"/>\r\n                    </button>\r\n                </form>\r\n            );\r\n        };\r\n};\r\n\r\n\r\nexport default Input;","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport styles from './CalcTodo.module.css';\r\n\r\nconst CalcTodo = ({ tasks, onClickFilteredTasks, filtered }) => {\r\n    const allTasks = tasks.length;\r\n    const completedTasks = tasks.filter(item => item.isDone).length;\r\n    const uncompletedTasks = tasks.filter(item => !item.isDone).length;\r\n\r\n\r\n    return (\r\n        <div className={styles.calcTasksWrapper}>\r\n                <button\r\n                    className={classnames({\r\n                        [styles.button]: true,\r\n                        [styles.selected]: filtered === 'Завершенные'\r\n                    })}\r\n                    onClick={() => onClickFilteredTasks('Завершенные')}\r\n                >\r\n                    Сделано:\r\n                    <span className={styles.tasksCount}>\r\n            {completedTasks}\r\n          </span>\r\n                </button>\r\n                <button\r\n                    className={classnames({\r\n                        [styles.button]: true,\r\n                        [styles.selected]: filtered === 'Незавершенные'\r\n                    })}\r\n                    onClick={() => onClickFilteredTasks('Незавершенные')}\r\n                >\r\n                    Осталось:\r\n                    <span className={styles.tasksCount}>\r\n            {uncompletedTasks}\r\n          </span>\r\n                </button>\r\n                <button\r\n                    className={classnames({\r\n                        [styles.button]: true,\r\n                        [styles.selected]: filtered === 'Все'\r\n                    })}\r\n                    onClick={()=>onClickFilteredTasks('Все')}\r\n                >\r\n                    Все:\r\n                    <span className={styles.tasksCount}>\r\n            {allTasks}\r\n          </span>\r\n                </button>\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CalcTodo;\r\n\r\n","import React, {useState} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport ItemList from '../ItemList/ItemList';\r\nimport Input from \"../Input/Input\";\r\nimport CalcTodo from \"../CalcTodo/CalcTodo\";\r\nimport styles from './Todo.module.css';\r\nimport update from 'immutability-helper';\r\nimport { DndProvider } from 'react-dnd'\r\nimport Backend from 'react-dnd-html5-backend'\r\n\r\nconst buttonTasksName = {\r\n    completed: 'Завершенные',\r\n    uncomplited: 'Незавершенные',\r\n    all: 'Все'\r\n};\r\n\r\nclass Todo extends React.Component {\r\n    maxId = 100;\r\n    state = {\r\n        tasks:  JSON.parse(localStorage.getItem('editedList') ||\r\n            '[{\"value\":\"Изучить React\",\"isDone\":false, \"isImportant\": true,\"id\":1},' +\r\n            '{\"value\":\"Найти работу\",\"isDone\":false, \"isImportant\": true,\"id\":2}]'),\r\n        count: 3,\r\n        filtered: buttonTasksName.all,\r\n        classNameForInputRepeat: false,\r\n    };\r\n\r\n    moveCard = (dragIndex, hoverIndex) => {\r\n        const dragCard = this.state.tasks[dragIndex];\r\n        this.setState(\r\n            update(this.state, {\r\n                tasks: {\r\n                    $splice: [\r\n                        [dragIndex, 1],\r\n                        [hoverIndex, 0, dragCard],\r\n                    ],\r\n                }\r\n            })\r\n        );\r\n    };\r\n\r\n    /*функция для отметки задачи, как сделанной*/\r\n    onClickDone = id => {\r\n        const newItemList = this.state.tasks.map(item => {\r\n            const newItem = {...item};\r\n            if (item.id === id) {\r\n                newItem.isDone = !item.isDone;\r\n            }\r\n            return newItem;\r\n        });\r\n        this.setState({ tasks: newItemList });\r\n    };\r\n\r\n    /*функция для отметки важной задачи*/\r\n    onClickImportant = id => {\r\n        const newItemList = this.state.tasks.map(item => {\r\n            const newItem = {...item};\r\n            if (item.id === id) {\r\n                newItem.isImportant = !item.isImportant;\r\n            }\r\n            return newItem;\r\n        });\r\n        this.setState({ tasks: newItemList });\r\n    };\r\n\r\n    /*функция для удаления задачи*/\r\n\r\n    onClickDelete = id => {\r\n        const newItemList = this.state.tasks.filter(item => {\r\n            return item.id !== id\r\n        });\r\n\r\n        this.setState({ tasks: newItemList });\r\n        this.setState((count) => count - 1);\r\n    };\r\n\r\n    /*функция для добавляения новой задачи и изменении числа в списке\r\n      задач*/\r\n\r\n    onClickAdd = value => {\r\n        const item = this.state.tasks.filter(item => item.value === value);\r\n        if (item.length === 0) {\r\n            this.setState(state => ({\r\n                tasks: [\r\n                    ...state.tasks,\r\n                    {\r\n                        value,\r\n                        isDone: false,\r\n                        isImportant: false,\r\n                        id: state.count + 1\r\n                    }\r\n                ],\r\n                count: state.count + 1,\r\n                classNameForInputRepeat: false\r\n            }));\r\n        } else {\r\n            this.setState({ classNameForInputRepeat: true });\r\n        }\r\n    };\r\n\r\n    onClickFilteredTasks = filtered => this.setState({ filtered: filtered });\r\n\r\n    render() {\r\n        let dealListString = JSON.stringify(this.state.tasks);\r\n        localStorage.setItem('editedList', dealListString);\r\n\r\n        let filteredTasks;\r\n        switch (this.state.filtered) {\r\n            case buttonTasksName.completed:\r\n                filteredTasks = this.state.tasks.filter(item => item.isDone);\r\n                break;\r\n            case buttonTasksName.uncomplited:\r\n                filteredTasks = this.state.tasks.filter(item => !item.isDone);\r\n                break;\r\n            case buttonTasksName.all:\r\n                filteredTasks = this.state.tasks;\r\n                break;\r\n        };\r\n\r\n        return (\r\n            <Card className={styles.container}>\r\n                <DndProvider backend={Backend}>\r\n                    <div>\r\n                        <div className={styles.todoHeader}>\r\n                            <h1 className={styles.todoHeaderTitle}>Список моих дел</h1>\r\n                            <CalcTodo\r\n                                tasks={this.state.tasks}\r\n                                onClickFilteredTasks={this.onClickFilteredTasks}\r\n                                filtered={this.state.filtered}\r\n                            />\r\n                        </div>\r\n                        <ItemList\r\n                            filtered={filteredTasks}\r\n                            filteredValue={this.state.filtered}\r\n                            onClickDone={this.onClickDone}\r\n                            onClickImportant={this.onClickImportant}\r\n                            onClickDelete={this.onClickDelete}\r\n                            moveCard={this.moveCard} />\r\n                        <Input items={this.state.tasks}\r\n                               classNameForInputRepeat={this.state.classNameForInputRepeat}\r\n                               onClickAdd={this.onClickAdd}\r\n                        />\r\n                    </div>\r\n                </DndProvider>\r\n            </Card>\r\n        )}\r\n};\r\n\r\nexport default Todo;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport styles from './App.module.css';\r\nimport About from '../About/About';\r\nimport Todo from '../Todo/Todo';\r\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom';\r\n\r\nclass App extends React.Component {\r\n\r\n    render () {\r\n        return (\r\n            <Router>\r\n                <html>\r\n                <body className={styles.body}>\r\n                <header className={styles.header}>\r\n                        <NavLink\r\n                            to='/'\r\n                            exact\r\n                            className={styles.header__link}\r\n                            activeClassName={styles['header__about-me']}\r\n                        >\r\n                            Обо мне\r\n                        </NavLink>\r\n                        <NavLink\r\n                            to='/todo'\r\n                            className={styles.header__link}\r\n                            activeClassName={styles.header__todos}\r\n                        >\r\n                            Дела\r\n                        </NavLink>\r\n                </header>\r\n                <div className={styles.content}>\r\n                    <Route path='/' exact component={About} />\r\n                    <Route path='/todo' component={Todo} />\r\n                </div>\r\n                </body>\r\n                </html>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App/App.jsx';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calcTasksWrapper\":\"CalcTodo_calcTasksWrapper__-FZwH\",\"button\":\"CalcTodo_button__3BBA_\",\"tasksCount\":\"CalcTodo_tasksCount__2g2NU\",\"selected\":\"CalcTodo_selected__1p850\",\"todoHeaderTitle\":\"CalcTodo_todoHeaderTitle__3-DCp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Item_wrapper__H3Op6\",\"wrapper__text\":\"Item_wrapper__text__1sqWj\",\"wrapper__icon\":\"Item_wrapper__icon__1pXRr\",\"item\":\"Item_item__18_IT\",\"done\":\"Item_done__3dapk\",\"deleteIcon\":\"Item_deleteIcon__30yae\",\"importantIcon\":\"Item_importantIcon__1Cwuc\",\"isImportant\":\"Item_isImportant__1b8FW\",\"MuiSvgIcon-root\":\"Item_MuiSvgIcon-root__1FELk\",\"MuiSvgIcon-fontSizeLarge\":\"Item_MuiSvgIcon-fontSizeLarge__2aUxE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"App_body__2z6v5\",\"header\":\"App_header__1WUKC\",\"header__link\":\"App_header__link__1o9qc\",\"header__about-me\":\"App_header__about-me__3C6DT\",\"header__todos\":\"App_header__todos__3Vp5j\",\"content\":\"App_content__1E5n0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Repos_wrap__J9e46\",\"wrap__repos\":\"Repos_wrap__repos__RO0kt\",\"wrap__title\":\"Repos_wrap__title__q8-5-\",\"error\":\"Repos_error__1nUVC\",\"error__text\":\"Repos_error__text__hejPe\",\"repositories\":\"Repos_repositories__10eQj\",\"repository\":\"Repos_repository__2wQ3G\",\"about-repository-wrapper\":\"Repos_about-repository-wrapper__1IcAt\",\"about-repository-link\":\"Repos_about-repository-link___ja_K\",\"info-about-repo\":\"Repos_info-about-repo__2bjiq\",\"info_about-repo__language-icon\":\"Repos_info_about-repo__language-icon__3KeXO\",\"info-about-repo__null-icon\":\"Repos_info-about-repo__null-icon__3CRBv\",\"info-about-repo__html-icon\":\"Repos_info-about-repo__html-icon__XcN4q\",\"info-about-repo__css-icon\":\"Repos_info-about-repo__css-icon__3-Uh6\",\"info-about-repo__javascript-icon\":\"Repos_info-about-repo__javascript-icon__1cuAL\",\"info-about-repo__language\":\"Repos_info-about-repo__language__t9EL-\",\"info-about-repo__star\":\"Repos_info-about-repo__star__2dcdK\",\"info-about-repo__forks\":\"Repos_info-about-repo__forks__P53AH\",\"info-about-repo__update\":\"Repos_info-about-repo__update__1_B0D\",\"repo__button\":\"Repos_repo__button__2fEMB\",\"buttons_wrap\":\"Repos_buttons_wrap__1Gxmr\",\"button\":\"Repos_button__3H3xe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrap\":\"Input_inputWrap__3ktRn\",\"input\":\"Input_input__2f43l\",\"inputError\":\"Input_inputError__4n94P\",\"inputRepeat\":\"Input_inputRepeat__u10Wu\",\"inputButton\":\"Input_inputButton__1oVzR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Todo_container__3YDkr\",\"todoHeader\":\"Todo_todoHeader__3OiN0\",\"todoHeaderTitle\":\"Todo_todoHeaderTitle__158tM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ItemListWrap\":\"ItemList_ItemListWrap__2GQOV\",\"ItemListWrapEmpty\":\"ItemList_ItemListWrapEmpty__1IOBV\"};","module.exports = __webpack_public_path__ + \"static/media/mail.9262307f.svg\";","module.exports = __webpack_public_path__ + \"static/media/telegram.8ea80a8c.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.f9f45406.svg\";","module.exports = __webpack_public_path__ + \"static/media/vk.8cd6dc13.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.ed09d0dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/button.2cb86fca.svg\";"],"sourceRoot":""}